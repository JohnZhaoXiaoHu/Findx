<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Findx.AspNetCore</name>
    </assembly>
    <members>
        <member name="M:Findx.AspNetCore.AspNetCoreModuleBase.UseModule(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            应用AspNetCore的服务业务
            </summary>
            <param name="app">应用程序构建器</param>
        </member>
        <member name="T:Findx.AspNetCore.Extensions.Extensions">
            <summary>
            AspNetCore应用扩展
            </summary>
            <summary>
            HttpClientBuilder弹性构建扩展
            </summary>
            <summary>
            AspNetCore扩展 - Request
            </summary>
            <summary>
            WebHost扩展
            </summary>
        </member>
        <member name="M:Findx.AspNetCore.Extensions.Extensions.UseMvcWithAreaRoute(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Boolean)">
            <summary>
            添加MVC并支持Area路由
            </summary>
            <param name="app">应用程序构建器</param>
            <param name="area">是否支持Area路由</param>
        </member>
        <member name="M:Findx.AspNetCore.Extensions.Extensions.MapControllersWithAreaRoute(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.Boolean)">
            <summary>
            添加Endpoint并Area路由支持
            </summary>
        </member>
        <member name="M:Findx.AspNetCore.Extensions.Extensions.UseFindx(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            注册请求日志中间件
            </summary>
            <param name="builder">应用程序生成器</param>
        </member>
        <member name="M:Findx.AspNetCore.Extensions.Extensions.UseJsonExceptionHandler(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            添加Json异常处理器中间件
            </summary>
            <param name="builder"></param>
            <returns></returns>
        </member>
        <member name="M:Findx.AspNetCore.Extensions.Extensions.AddTimeoutPolicy(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Int32)">
            <summary>
            添加超时策略
            </summary>
            <param name="httpClientBuilder"></param>
            <param name="seconds">秒</param>
            <returns></returns>
        </member>
        <member name="M:Findx.AspNetCore.Extensions.Extensions.AddRetryPolicy``1(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Int32)">
            <summary>
            添加重试策略
            </summary>
            <typeparam name="TException">触发异常类型</typeparam>
            <param name="httpClientBuilder"></param>
            <param name="retryCount">重试次数</param>
            <returns></returns>
        </member>
        <member name="M:Findx.AspNetCore.Extensions.Extensions.AddCircuitBreakerPolicy``1(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.Int32,System.Int32)">
            <summary>
            添加熔断策略
            </summary>
            <typeparam name="TException"></typeparam>
            <param name="httpClientBuilder"></param>
            <param name="exceptionsAllowedBeforeBreaking"></param>
            <param name="durationOfBreak"></param>
            <returns></returns>
        </member>
        <member name="M:Findx.AspNetCore.Extensions.Extensions.AddFallbackPolicy``1(Microsoft.Extensions.DependencyInjection.IHttpClientBuilder,System.String,System.Int32)">
            <summary>
            添加降级策略
            </summary>
            <typeparam name="TException"></typeparam>
            <param name="httpClientBuilder"></param>
            <param name="httpResponseMessage"></param>
            <param name="httpResponseStatus"></param>
            <returns></returns>
        </member>
        <member name="M:Findx.AspNetCore.Extensions.Extensions.IsAjaxRequest(Microsoft.AspNetCore.Http.HttpRequest)">
             <summary>
             确定指定的 HTTP 请求是否为 AJAX 请求。
             </summary>
            
             <returns>
             如果指定的 HTTP 请求是 AJAX 请求，则为 true；否则为 false。
             </returns>
             <param name="request">HTTP 请求。</param>
             <exception cref="T:System.ArgumentNullException"><paramref name="request"/> 参数为 null（在 Visual Basic 中为 Nothing）。</exception>
        </member>
        <member name="M:Findx.AspNetCore.Extensions.Extensions.IsJsonContextType(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            确定指定的 HTTP 请求的 ContextType 是否为 Json 方式
            </summary>
        </member>
        <member name="M:Findx.AspNetCore.Extensions.Extensions.GetClientIp(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            获取客户端IP地址
            </summary>
        </member>
        <member name="M:Findx.AspNetCore.Extensions.Extensions.GetBrowser(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            获取请求浏览器
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Findx.AspNetCore.Extensions.Extensions.GetSystem(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            获取请求系统
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Findx.AspNetCore.Extensions.Extensions.AddRazorPageAndRenderer(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            添加Razor和读取Razor绑定后内容
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="T:Findx.AspNetCore.Mvc.ApiControllerBase">
            <summary>
            WebApi控制器基类
            </summary>
        </member>
        <member name="P:Findx.AspNetCore.Mvc.ApiControllerBase.Logger">
            <summary>
            获取或设置 日志对象
            </summary>
        </member>
        <member name="T:Findx.AspNetCore.Mvc.AreaApiControllerBase">
            <summary>
            区域的WebApi控制器基类
            </summary>
        </member>
        <member name="P:Findx.AspNetCore.Mvc.AreaApiControllerBase.Logger">
            <summary>
            获取或设置 日志对象
            </summary>
        </member>
        <member name="T:Findx.AspNetCore.Mvc.CrudControllerBase`6">
            <summary>
            增删改查通用控制器基类
            </summary>
            <typeparam name="TModel"></typeparam>
            <typeparam name="TDto"></typeparam>
            <typeparam name="TCreateRequest"></typeparam>
            <typeparam name="TUpdateRequest"></typeparam>
            <typeparam name="TQueryParameter"></typeparam>
            <typeparam name="TKey"></typeparam>
        </member>
        <member name="M:Findx.AspNetCore.Mvc.CrudControllerBase`6.CreateBefore(`2)">
            <summary>
            创建前操作
            </summary>
            <param name="dto">创建参数</param>
        </member>
        <member name="M:Findx.AspNetCore.Mvc.CrudControllerBase`6.Create(`2,Findx.Data.IRepository{`0},Findx.Mapping.IMapper)">
            <summary>
            添加数据
            </summary>
            <param name="request"></param>
            <param name="repository"></param>
            <param name="mapper"></param>
            <returns></returns>
        </member>
        <member name="M:Findx.AspNetCore.Mvc.CrudControllerBase`6.UpdateBefore(`3)">
            <summary>
            修改前操作
            </summary>
            <param name="dto">修改参数</param>
        </member>
        <member name="M:Findx.AspNetCore.Mvc.CrudControllerBase`6.Update(`3,Findx.Data.IRepository{`0},Findx.Mapping.IMapper)">
            <summary>
            修改数据
            </summary>
            <param name="request"></param>
            <param name="repository"></param>
            <param name="mapper"></param>
            <returns></returns>
        </member>
        <member name="M:Findx.AspNetCore.Mvc.CrudControllerBase`6.DeleteById(`5,Findx.Data.IRepository{`0})">
            <summary>
            删除数据
            </summary>
            <param name="id"></param>
            <param name="repository"></param>
            <returns></returns>
        </member>
        <member name="M:Findx.AspNetCore.Mvc.CrudControllerBase`6.DeleteMany(System.Collections.Generic.List{`5},Findx.Data.IRepository{`0})">
            <summary>
            删除数据
            </summary>
            <param name="ids"></param>
            <param name="repository"></param>
            <returns></returns>
        </member>
        <member name="T:Findx.AspNetCore.Mvc.DefaultApiInterfaceService">
            <summary>
            默认Api接口服务
            </summary>
        </member>
        <member name="F:Findx.AspNetCore.Mvc.DefaultApiInterfaceService._controllerDescriptors">
            <summary>
            控制器描述列表
            </summary>
        </member>
        <member name="F:Findx.AspNetCore.Mvc.DefaultApiInterfaceService._actionDescriptors">
            <summary>
            操作描述列表
            </summary>
        </member>
        <member name="F:Findx.AspNetCore.Mvc.DefaultApiInterfaceService._partManager">
            <summary>
            应用程序部分管理
            </summary>
        </member>
        <member name="F:Findx.AspNetCore.Mvc.DefaultApiInterfaceService.Lock">
            <summary>
            对象锁
            </summary>
        </member>
        <member name="M:Findx.AspNetCore.Mvc.DefaultApiInterfaceService.#ctor(Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager)">
            <summary>
            初始化一个<see cref="T:Findx.AspNetCore.Mvc.DefaultApiInterfaceService"/>类型的实例
            </summary>
            <param name="partManager">应用程序部分管理</param>
        </member>
        <member name="M:Findx.AspNetCore.Mvc.DefaultApiInterfaceService.GetAllController">
            <summary>
            获取所有控制器。不包含抽象的类
            </summary>
        </member>
        <member name="M:Findx.AspNetCore.Mvc.DefaultApiInterfaceService.GetAllAction">
            <summary>
            获取所有操作
            </summary>
        </member>
        <member name="T:Findx.AspNetCore.Mvc.Filters.AntiDuplicateRequestAttribute">
            <summary>
            防止重复提交过滤器
            </summary>
        </member>
        <member name="P:Findx.AspNetCore.Mvc.Filters.AntiDuplicateRequestAttribute.Key">
            <summary>
            业务标识
            </summary>
        </member>
        <member name="P:Findx.AspNetCore.Mvc.Filters.AntiDuplicateRequestAttribute.IsDistributed">
            <summary>
            是否分布式
            </summary>
        </member>
        <member name="P:Findx.AspNetCore.Mvc.Filters.AntiDuplicateRequestAttribute.Interval">
            <summary>
            再次提交时间间隔
            </summary>
        </member>
        <member name="P:Findx.AspNetCore.Mvc.Filters.AntiDuplicateRequestAttribute.Type">
            <summary>
            锁类型
            </summary>
        </member>
        <member name="M:Findx.AspNetCore.Mvc.Filters.AntiDuplicateRequestAttribute.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate)">
            <summary>
            执行
            </summary>
            <param name="context"></param>
            <param name="next"></param>
            <returns></returns>
        </member>
        <member name="T:Findx.AspNetCore.Mvc.Filters.LockType">
            <summary>
            锁类型
            </summary>
        </member>
        <member name="F:Findx.AspNetCore.Mvc.Filters.LockType.User">
            <summary>
            用户级别锁,同一用户只能同时发起一个请求
            </summary>
        </member>
        <member name="F:Findx.AspNetCore.Mvc.Filters.LockType.Global">
            <summary>
            全局锁，该操作同时只有一个用户请求被执行
            </summary>
        </member>
        <member name="T:Findx.AspNetCore.Mvc.Filters.ExceptionHandlerAttribute">
            <summary>
            异常处理过滤器
            </summary>
        </member>
        <member name="M:Findx.AspNetCore.Mvc.Filters.ExceptionHandlerAttribute.OnException(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext)">
            <summary>
            异常处理
            </summary>
            <param name="context">异常上下文</param>
        </member>
        <member name="T:Findx.AspNetCore.Mvc.Filters.PrivateNetworkLimiterAttribute">
            <summary>
            私有网络访问限制
            </summary>
        </member>
        <member name="M:Findx.AspNetCore.Mvc.Filters.PrivateNetworkLimiterAttribute.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate)">
            <summary>
            Action执行
            </summary>
            <param name="context"></param>
            <param name="next"></param>
            <returns></returns>
        </member>
        <member name="T:Findx.AspNetCore.Mvc.Filters.RateLimiterAttribute">
            <summary>
            限速过滤器
            </summary>
        </member>
        <member name="P:Findx.AspNetCore.Mvc.Filters.RateLimiterAttribute.Key">
            <summary>
            业务标识
            </summary>
        </member>
        <member name="P:Findx.AspNetCore.Mvc.Filters.RateLimiterAttribute.Period">
            <summary>
            限定请求时长
            </summary>
        </member>
        <member name="P:Findx.AspNetCore.Mvc.Filters.RateLimiterAttribute.Limit">
            <summary>
            限定时长内请求次数
            </summary>
        </member>
        <member name="P:Findx.AspNetCore.Mvc.Filters.RateLimiterAttribute.Type">
            <summary>
            限速类型
            </summary>
        </member>
        <member name="M:Findx.AspNetCore.Mvc.Filters.RateLimiterAttribute.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate)">
            <summary>
            执行
            </summary>
            <param name="context"></param>
            <param name="next"></param>
            <returns></returns>
        </member>
        <member name="T:Findx.AspNetCore.Mvc.Filters.RateLimitType">
            <summary>
            锁类型
            </summary>
        </member>
        <member name="F:Findx.AspNetCore.Mvc.Filters.RateLimitType.User">
            <summary>
            用户级别限速,同一用户只能在指定速率规则进行请求
            </summary>
        </member>
        <member name="F:Findx.AspNetCore.Mvc.Filters.RateLimitType.IP">
            <summary>
            IP级别限速,同一IP只能在指定速率规则进行请求
            </summary>
        </member>
        <member name="F:Findx.AspNetCore.Mvc.Filters.RateLimitType.Global">
            <summary>
            全局级别限速，全局只能在指定速率规则进行请求
            </summary>
        </member>
        <member name="M:Findx.AspNetCore.Mvc.IApiInterfaceService.GetAllController">
            <summary>
            获取所有控制器。不包含抽象的类
            </summary>
        </member>
        <member name="M:Findx.AspNetCore.Mvc.IApiInterfaceService.GetAllAction">
            <summary>
            获取所有操作
            </summary>
        </member>
        <member name="T:Findx.AspNetCore.Mvc.IRazorViewRenderer">
            <summary>
            View视图操作
            </summary>
        </member>
        <member name="M:Findx.AspNetCore.Mvc.IRazorViewRenderer.RenderViewToStringAsync``1(System.String,``0)">
            <summary>
            视图数据绑定并返回
            </summary>
            <typeparam name="TModel"></typeparam>
            <param name="viewName"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Findx.AspNetCore.Mvc.Middlewares.JsonExceptionHandlerMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Microsoft.Extensions.Logging.ILogger{Findx.AspNetCore.Mvc.Middlewares.JsonExceptionHandlerMiddleware},Findx.ExceptionHandling.IExceptionNotifier)">
            <summary>
            Ctor
            </summary>
            <param name="next"></param>
            <param name="logger"></param>
            <param name="exceptionNotifier"></param>
        </member>
        <member name="M:Findx.AspNetCore.Mvc.Middlewares.JsonExceptionHandlerMiddleware.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            执行中间件拦截逻辑
            </summary>
            <param name="context">Http上下文</param>
            <returns></returns>
        </member>
        <member name="T:Findx.AspNetCore.Mvc.Models.ActionDescriptor">
            <summary>
            操作描述
            </summary>
        </member>
        <member name="P:Findx.AspNetCore.Mvc.Models.ActionDescriptor.Controller">
            <summary>
            控制器描述
            </summary>
        </member>
        <member name="P:Findx.AspNetCore.Mvc.Models.ActionDescriptor.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Findx.AspNetCore.Mvc.Models.ActionDescriptor.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:Findx.AspNetCore.Mvc.Models.ActionDescriptor.MethodInfo">
            <summary>
            方法信息
            </summary>
        </member>
        <member name="M:Findx.AspNetCore.Mvc.Models.ActionDescriptor.#ctor(Findx.AspNetCore.Mvc.Models.ControllerDescriptor,System.Reflection.MethodInfo)">
            <summary>
            初始化一个<see cref="T:Findx.AspNetCore.Mvc.Models.ActionDescriptor"/>类型的实例
            </summary>
            <param name="controller">控制器</param>
            <param name="methodInfo">方法信息</param>
        </member>
        <member name="M:Findx.AspNetCore.Mvc.Models.ActionDescriptor.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:Findx.AspNetCore.Mvc.Models.ActionDescriptor.InitDescription">
            <summary>
            初始化描述
            </summary>
        </member>
        <member name="T:Findx.AspNetCore.Mvc.Models.ControllerDescriptor">
            <summary>
            控制器描述
            </summary>
        </member>
        <member name="P:Findx.AspNetCore.Mvc.Models.ControllerDescriptor.Area">
            <summary>
            区域
            </summary>
        </member>
        <member name="P:Findx.AspNetCore.Mvc.Models.ControllerDescriptor.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Findx.AspNetCore.Mvc.Models.ControllerDescriptor.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:Findx.AspNetCore.Mvc.Models.ControllerDescriptor.TypeInfo">
            <summary>
            类型信息
            </summary>
        </member>
        <member name="M:Findx.AspNetCore.Mvc.Models.ControllerDescriptor.#ctor(System.Reflection.TypeInfo)">
            <summary>
            初始化一个<see cref="T:Findx.AspNetCore.Mvc.Models.ControllerDescriptor"/>类型的实例
            </summary>
            <param name="typeInfo">类型信息</param>
        </member>
        <member name="M:Findx.AspNetCore.Mvc.Models.ControllerDescriptor.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:Findx.AspNetCore.Mvc.Models.ControllerDescriptor.InitName">
            <summary>
            初始化名称
            </summary>
        </member>
        <member name="M:Findx.AspNetCore.Mvc.Models.ControllerDescriptor.InitArea">
            <summary>
            初始化区域
            </summary>
        </member>
        <member name="M:Findx.AspNetCore.Mvc.Models.ControllerDescriptor.InitDescription">
            <summary>
            初始化描述
            </summary>
        </member>
        <member name="T:Findx.AspNetCore.Mvc.QueryControllerBase`4">
            <summary>
            通用查询控制器基类
            </summary>
        </member>
        <member name="M:Findx.AspNetCore.Mvc.QueryControllerBase`4.CreatePageWhereExpression(`2)">
            <summary>
            构建分页查询条件
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Findx.AspNetCore.Mvc.QueryControllerBase`4.CreatePageOrderExpression(`2)">
            <summary>
            构建分页查询条件
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Findx.AspNetCore.Mvc.QueryControllerBase`4.PagerQuery(`2,Findx.Data.IRepository{`0})">
            <summary>
            查询数据
            </summary>
            <param name="request"></param>
            <param name="repository"></param>
            <returns></returns>
        </member>
        <member name="M:Findx.AspNetCore.Mvc.QueryControllerBase`4.ToPagerQueryResult(Findx.Data.PagedResult{System.Collections.Generic.List{`1}})">
            <summary>
            转换分页查询结果
            </summary>
            <param name="result">分页查询结果</param>
        </member>
        <member name="M:Findx.AspNetCore.Mvc.QueryControllerBase`4.Query(`2,Findx.Data.IRepository{`0})">
            <summary>
            查询列表数据
            </summary>
            <param name="request"></param>
            <param name="repository"></param>
            <returns></returns>
        </member>
        <member name="M:Findx.AspNetCore.Mvc.QueryControllerBase`4.ToQueryResult(System.Collections.Generic.List{`1})">
            <summary>
            转换列表查询结果
            </summary>
            <param name="result">分页查询结果</param>
        </member>
        <member name="M:Findx.AspNetCore.Mvc.QueryControllerBase`4.GetById(`3,Findx.Data.IRepository{`0})">
            <summary>
            查询单条数据
            </summary>
            <param name="id"></param>
            <param name="repository"></param>
            <returns></returns>
        </member>
        <member name="M:Findx.AspNetCore.Mvc.QueryControllerBase`4.ToGetByIdResult(`0)">
            <summary>
            转换单条数据查询结果
            </summary>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:Findx.AspNetCore.Mvc.QueryControllerBase`4.AfterGetById(Findx.Data.IRepository{`0},`0)">
            <summary>
            单条数据查询后操作
            </summary>
            <param name="repository"></param>
            <param name="model"></param>
        </member>
        <member name="T:Findx.AspNetCore.Mvc.RazorViewRenderer">
            <summary>
            视图读取
            </summary>
        </member>
        <member name="M:Findx.AspNetCore.Mvc.RazorViewRenderer.#ctor(Microsoft.AspNetCore.Mvc.Razor.IRazorViewEngine,Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataProvider,Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            Ctor
            </summary>
            <param name="viewEngine"></param>
            <param name="tempDataProvider"></param>
            <param name="httpContextAccessor"></param>
        </member>
        <member name="M:Findx.AspNetCore.Mvc.RazorViewRenderer.RenderViewToStringAsync``1(System.String,``0)">
            <summary>
            读取视图内容
            </summary>
            <typeparam name="TModel"></typeparam>
            <param name="viewName"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="T:Findx.AspNetCore.Upload.DefaultFileUploadService">
            <summary>
            默认文件上传服务
            </summary>
        </member>
        <member name="M:Findx.AspNetCore.Upload.DefaultFileUploadService.UploadAsync(Findx.AspNetCore.Upload.Params.SingleFileUploadParam,System.Threading.CancellationToken)">
            <summary>
            上传文件。单文件
            </summary>
            <param name="param">参数</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Findx.AspNetCore.Upload.DefaultFileUploadService.SaveAsync(Microsoft.AspNetCore.Http.IFormFile,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            保存文件
            </summary>
            <param name="formFile">表单文件</param>
            <param name="relativePath">相对路径</param>
            <param name="rootPath">根路径</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Findx.AspNetCore.Upload.DefaultFileUploadService.UploadAsync(Findx.AspNetCore.Upload.Params.MultipleFileUploadParam,System.Threading.CancellationToken)">
            <summary>
            上传文件。多文件
            </summary>
            <param name="param">参数</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Findx.AspNetCore.Upload.DefaultFileUploadService.SaveAsync(Microsoft.AspNetCore.Http.IFormFile,System.String,System.Threading.CancellationToken)">
            <summary>
            保存文件
            </summary>
            <param name="formFile">表单文件</param>
            <param name="savePath">保存路径</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Findx.AspNetCore.Upload.DefaultFileUploadService.SaveWithMd5Async(Microsoft.AspNetCore.Http.IFormFile,System.String,System.Threading.CancellationToken)">
            <summary>
            保存文件并返回文件MD5值
            </summary>
            <param name="formFile">表单文件</param>
            <param name="savePath">保存路径</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Findx.AspNetCore.Upload.DefaultFileUploadService.Md5(System.IO.Stream)">
            <summary>
            MD5哈希
            </summary>
            <param name="stream">流</param>
        </member>
        <member name="T:Findx.AspNetCore.Upload.IFileUploadService">
            <summary>
            文件上传服务
            </summary>
        </member>
        <member name="M:Findx.AspNetCore.Upload.IFileUploadService.UploadAsync(Findx.AspNetCore.Upload.Params.SingleFileUploadParam,System.Threading.CancellationToken)">
            <summary>
            上传文件。单文件
            </summary>
            <param name="param">参数</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Findx.AspNetCore.Upload.IFileUploadService.UploadAsync(Findx.AspNetCore.Upload.Params.MultipleFileUploadParam,System.Threading.CancellationToken)">
            <summary>
            上传文件。多文件
            </summary>
            <param name="param">参数</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Findx.AspNetCore.Upload.IFileUploadService.SaveAsync(Microsoft.AspNetCore.Http.IFormFile,System.String,System.Threading.CancellationToken)">
            <summary>
            保存文件
            </summary>
            <param name="formFile">表单文件</param>
            <param name="savePath">保存路径</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Findx.AspNetCore.Upload.IFileUploadService.SaveWithMd5Async(Microsoft.AspNetCore.Http.IFormFile,System.String,System.Threading.CancellationToken)">
            <summary>
            保存文件并返回文件MD5值
            </summary>
            <param name="formFile">表单文件</param>
            <param name="savePath">保存路径</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="T:Findx.AspNetCore.Upload.Params.MultipleFileUploadParam">
            <summary>
            多文件上传参数
            </summary>
        </member>
        <member name="P:Findx.AspNetCore.Upload.Params.MultipleFileUploadParam.Request">
            <summary>
            当前请求
            </summary>
        </member>
        <member name="P:Findx.AspNetCore.Upload.Params.MultipleFileUploadParam.FormFiles">
            <summary>
            上传的文件对象
            </summary>
        </member>
        <member name="P:Findx.AspNetCore.Upload.Params.MultipleFileUploadParam.RootPath">
            <summary>
            存储根路径
            </summary>
        </member>
        <member name="P:Findx.AspNetCore.Upload.Params.MultipleFileUploadParam.Module">
            <summary>
            模块名称
            </summary>
        </member>
        <member name="P:Findx.AspNetCore.Upload.Params.MultipleFileUploadParam.Group">
            <summary>
            分组
            </summary>
        </member>
        <member name="P:Findx.AspNetCore.Upload.Params.MultipleFileUploadParam.FullPath">
            <summary>
            完整目录
            </summary>
        </member>
        <member name="P:Findx.AspNetCore.Upload.Params.MultipleFileUploadParam.RelativePath">
            <summary>
            相对目录
            </summary>
        </member>
        <member name="T:Findx.AspNetCore.Upload.Params.SingleFileUploadParam">
            <summary>
            单文件上传参数
            </summary>
        </member>
        <member name="P:Findx.AspNetCore.Upload.Params.SingleFileUploadParam.Request">
            <summary>
            当前请求
            </summary>
        </member>
        <member name="P:Findx.AspNetCore.Upload.Params.SingleFileUploadParam.FormFile">
            <summary>
            上传的文件对象
            </summary>
        </member>
        <member name="P:Findx.AspNetCore.Upload.Params.SingleFileUploadParam.RootPath">
            <summary>
            存储根路径
            </summary>
        </member>
        <member name="P:Findx.AspNetCore.Upload.Params.SingleFileUploadParam.Module">
            <summary>
            模块名称
            </summary>
        </member>
        <member name="P:Findx.AspNetCore.Upload.Params.SingleFileUploadParam.Group">
            <summary>
            分组
            </summary>
        </member>
        <member name="P:Findx.AspNetCore.Upload.Params.SingleFileUploadParam.FullPath">
            <summary>
            完整目录
            </summary>
        </member>
        <member name="P:Findx.AspNetCore.Upload.Params.SingleFileUploadParam.RelativePath">
            <summary>
            相对目录
            </summary>
        </member>
    </members>
</doc>
